---
# tasks file for generic_docker_systemd

- name: Pull docker service image
  docker_image:
    name: "{{ docker_image }}"
    source: pull
  when: method == 'pull'

- name: Pull docker database image
  docker_image:
    name: "{{ docker_db_image }}"
    source: pull
  when: enable_db

- name: Create a docker network for the service and the database
  docker_network:
    name: "{{ docker_network_name }}"
  when: create_network

- name: Check if db is already configured
  stat:
    path: "{{ docker_service_directory_db }}/*"
  register: database_conf
  when: enable_db

- name: Setup database
  include_tasks: db-setup.yml
  when:
    - enable_db
    - db_setup_required | bool

- name: Create service data volume
  docker_volume:
    name: "{{ docker_service_volume_name }}"
    state: present
  register: service_data_volume
  ignore_errors: true
  when: create_volume

# Temporary fix for a bug that will make docker_volume fail if the container doesn't exists yet.

- name: Create service data volume MANUALLY
  command: "docker volume create {{ docker_service_volume_name }}"
  when: service_data_volume.failed|default(false)

- name: Create systemd database service
  template:
    src: systemd-service_db.template
    dest: "/etc/systemd/system/{{ docker_service_prefix }}{{ service_db_name }}.service"
    owner: root
    group: root
  when: enable_db
  notify: Enable systemd database service and start it

- name: Create systemd redis service
  template:
    src: systemd-service_redis.template
    dest: "/etc/systemd/system/{{ docker_service_prefix }}{{ service_redis_name }}.service"
    owner: root
    group: root
  when: enable_redis
  notify: Enable systemd redis service and start it

- name: Create systemd service
  template:
    src: systemd-service.template
    dest: "/etc/systemd/system/{{ docker_service_prefix }}{{ service_name }}.service"
    owner: root
    group: root
  notify: Enable systemd service and start it
